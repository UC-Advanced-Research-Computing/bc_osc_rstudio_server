<%
  q = (custom_queue || "").to_s
  g = (defined?(num_gpus) && !num_gpus.blank?) ? num_gpus.to_i : 0
  c = (num_cpus.blank? ? 1 : num_cpus.to_i)

  GPU_PARTS = %w[gpu-v100 gpu-a100 gpu-h100].freeze

  # --- Rule 1: partition must match GPU request ---
  if g > 0 && !GPU_PARTS.include?(q)
    raise "You requested #{g} GPU(s) but selected '#{q}', which is not a GPU partition. Choose one of: #{GPU_PARTS.join(', ')}."
  end

  # --- Rule 2: max GPUs per partition ---
  case q
  when "gpu-v100", "gpu-a100"
    if g > 2
      raise "On the #{q} partition, you can request at most 2 GPUs, but you asked for #{g}."
    end
  when "gpu-h100"
    if g > 8
      raise "On the #{q} partition, you can request at most 8 GPUs, but you asked for #{g}."
    end
  end

  # --- Rule 3: max CPUs per GPU ---
  if g > 0
    case q
    when "gpu-v100", "gpu-a100"
      max_cpus = 32 * g
      if c > max_cpus
        raise "On the #{q} partition, you can request up to 32 cores per GPU. With #{g} GPU(s), the maximum is #{max_cpus}, but you asked for #{c}."
      end
    when "gpu-h100"
      max_cpus = 12 * g
      if c > max_cpus
        raise "On the #{q} partition, you can request up to 12 cores per GPU. With #{g} GPU(s), the maximum is #{max_cpus}, but you asked for #{c}."
      end
    end
  end
%>
---
batch_connect:
  template: "basic"
  conn_params:
    - csrf_token
script:
  queue_name: "<%= custom_queue %>"
  native:
    - "--nodes"
    - "<%= bc_num_slots.blank? ? 1 : bc_num_slots.to_i %>"
    - "--ntasks"
    - "<%= bc_num_slots.blank? ? 1 : bc_num_slots.to_i %>"
    - "--cpus-per-task"
    - "<%= num_cpus.blank? ? 1 : num_cpus.to_i %>"
    - "--gres=gpu:<%= defined?(num_gpus) && !num_gpus.blank? ? num_gpus : "0" %>"
